// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put you code here:
    /**
    * Basic implementation using 2 half adders
    * HalfAdder(a = a, b = b, sum = sumAB, carry = carryAB);
    * HalfAdder(a = sumAB, b = c, sum = sum, carry = carryABC);
    * Xor(a = carryAB, b = carryABC, out = carry);
    */
    
    /* Implementation using only 9 nand gates */
    /* Sum A+B == A Xor B */
    Nand(a = a, b = b, out = nandAB);
    Nand(a = a, b = nandAB, out = nandABA);
    Nand(a = nandAB, b = b, out = nandABB);
    Nand(a = nandABA, b = nandABB, out = sumAB);
    /* Sum A+B+C == C Xor Sum A+B */
    Nand(a = sumAB, b = c, out = nandABC);
    Nand(a = nandABC, b = sumAB, out = nandSumAB);
    Nand(a = nandABC, b = c, out =  nandSumC);
    Nand(a = nandSumAB, b = nandSumC , out = sum);
    /* Carry */
    Nand(a = nandABC, b = nandAB, out = carry);
}
